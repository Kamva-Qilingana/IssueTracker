@model IssueTracker.Models.IssueListViewModel
@using IssueTracker.Models
@{
    ViewData["Title"] = "Issues";
}

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Issue Tracker</title>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<style>
body { background: #f5f7fb; padding: 20px; font-family: 'Segoe UI', sans-serif; }
.issue-card { border-radius: 10px; margin-bottom: 15px; transition: transform 0.2s; }
.issue-card:hover { transform: translateY(-3px); box-shadow: 0 4px 15px rgba(0,0,0,0.1); }
.status-badge { padding: 5px 12px; border-radius: 20px; font-weight: 500; }
.priority-badge { padding: 3px 10px; border-radius: 15px; font-size: 0.8rem; }
.action-buttons .btn { margin-left: 5px; }
.filter-btn { margin: 0 5px 10px 0; }
.empty-state { text-align: center; padding: 40px 0; color: #6c757d; }
.empty-state i { font-size: 5rem; color: #dee2e6; margin-bottom: 20px; }
</style>
</head>
<body>
<div class="container">

    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="text-primary"><i class="fas fa-bug me-2"></i>IssueTracker</h1>
        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createIssueModal">
            <i class="fas fa-plus me-1"></i> New Issue
        </button>
    </div>

    <!-- Filters -->
    <div class="mb-4">
        <button class="btn btn-outline-primary filter-btn active" data-status="all">All Issues</button>
        <button class="btn btn-outline-success filter-btn" data-status="open">Open</button>
        <button class="btn btn-outline-info filter-btn" data-status="inprogress">In Progress</button>
        <button class="btn btn-outline-secondary filter-btn" data-status="closed">Closed</button>
    </div>

    <!-- Issues List -->
    <div id="issuesList">
        @if (Model?.Issues?.Any() == true)
        {
            foreach (var issue in Model.Issues)
            {
                <div class="card issue-card shadow-sm" data-status="@issue.Status.ToString().ToLower()">
                    <div class="card-body d-flex justify-content-between">
                        <div>
                            <h5 class="card-title">@issue.IssueType?.IssueName</h5>
                            <p class="card-text">@issue.Description</p>
                            <span class="priority-badge @(issue.Priority switch {
                                IssuePriority.Low => "bg-success text-white",
                                IssuePriority.Medium => "bg-primary text-white",
                                IssuePriority.High => "bg-warning text-dark",
                                IssuePriority.Critical => "bg-danger text-white",
                                _ => "bg-light text-dark"
                            })">@issue.Priority</span>
                            <span class="status-badge @(issue.Status switch {
                                IssueStatus.Open => "bg-success text-white",
                                IssueStatus.InProgress => "bg-info text-white",
                                IssueStatus.Resolved => "bg-primary text-white",
                                IssueStatus.Closed => "bg-secondary text-white",
                                _ => "bg-light text-dark"
                            })">@issue.Status</span>
                        </div>
                        <div class="action-buttons d-flex align-items-start">
                            <button class="btn btn-sm btn-outline-primary edit-btn"
                                    data-bs-toggle="modal" data-bs-target="#editIssueModal"
                                    data-id="@issue.IssueId"
                                    data-description="@issue.Description"
                                    data-priority="@issue.Priority"
                                    data-status="@issue.Status"
                                    data-typeid="@issue.IssueTypeId">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-danger ms-2 delete-btn"
                                    data-bs-toggle="modal" data-bs-target="#deleteIssueModal"
                                    data-id="@issue.IssueId">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-footer text-muted">
                        Created: @issue.CreatedAt.ToLocalTime().ToString("yyyy-MM-dd HH:mm")
                    </div>
                </div>
            }
        }
        else
        {
            <div class="empty-state">
                <i class="fas fa-clipboard-list"></i>
                <h4>No issues found</h4>
                <p>Get started by creating your first issue</p>
            </div>
        }
    </div>
</div>

<!-- Create Issue Modal -->
<div class="modal fade" id="createIssueModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Issue</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="Create" method="post" id="createIssueForm">
                    <div class="mb-3">
                        <label asp-for="NewIssue.IssueTypeId" class="form-label">Issue Type</label>
                        <select asp-for="NewIssue.IssueTypeId" class="form-select"
                                asp-items="@(new SelectList(Model?.IssueTypes ?? new List<IssueType>(), "IssueTypeId", "IssueName"))">
                            <option value="">-- Select Issue Type --</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label asp-for="NewIssue.Description" class="form-label">Description</label>
                        <textarea asp-for="NewIssue.Description" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="NewIssue.Description" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="NewIssue.Priority" class="form-label">Priority</label>
                        <select asp-for="NewIssue.Priority" class="form-select">
                            <option value="" selected>-- Select Priority --</option>
                            <option value="Low">Low</option>
                            <option value="Medium">Medium</option>
                            <option value="High">High</option>
                            <option value="Critical">Critical</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label asp-for="NewIssue.Status" class="form-label">Status</label>
                        <select asp-for="NewIssue.Status" class="form-select">
                            <option value="" selected>-- Select Status -- </option>
                            <option value="Open">Open</option>
                            @* <option value="InProgress">In Progress</option>
                            <option value="Resolved">Resolved</option>
                            <option value="Closed">Closed</option> *@
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" form="createIssueForm" class="btn btn-success">Create Issue</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Issue Modal -->
<div class="modal fade" id="editIssueModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Note: set asp-action and asp-controller correctly -->
            <form id="editIssueForm" method="post" asp-action="Edit" asp-controller="Home">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title">Edit Issue</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <!-- Hidden field MUST be named "id" to bind to action parameter -->
                    <input type="hidden" id="editIssueId" name="id" />

                    <div class="mb-3">
                        <label class="form-label">Issue Type</label>
                        <select id="editIssueType" name="IssueTypeId" class="form-select">
                            <option value="">-- Select Issue Type --</option>
                            @foreach(var type in Model.IssueTypes)
                            {
                                <option value="@type.IssueTypeId">@type.IssueName</option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea id="editDescription" name="Description" class="form-control" rows="3"></textarea>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Priority</label>
                        <select id="editPriority" name="Priority" class="form-select">
                            <option value="Low">Low</option>
                            <option value="Medium">Medium</option>
                            <option value="High">High</option>
                            <option value="Critical">Critical</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Status</label>
                        <select id="editStatus" name="Status" class="form-select">
                            <option value="Open">Open</option>
                            <option value="InProgress">In Progress</option>
                            <option value="Resolved">Resolved</option>
                            <option value="Closed">Closed</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    // Populate Edit Modal with data
    document.querySelectorAll('.edit-btn').forEach(btn => {
        btn.addEventListener('click', () => {
            document.getElementById('editIssueId').value = btn.dataset.id;
            document.getElementById('editDescription').value = btn.dataset.description;
            document.getElementById('editPriority').value = btn.dataset.priority;
            document.getElementById('editStatus').value = btn.dataset.status;
            document.getElementById('editIssueType').value = btn.dataset.typeid;
        });
    });
</script>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteIssueModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="deleteIssueForm" method="post" asp-action="Delete" asp-controller="Home">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title text-danger"><i class="fas fa-exclamation-triangle me-2"></i>Confirm Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this issue? This action cannot be undone.</p>
                    <input type="hidden" id="deleteIssueId" name="id" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete Issue</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    // Populate Delete Modal hidden field
    document.querySelectorAll('.delete-btn').forEach(btn => {
        btn.addEventListener('click', () => {
            document.getElementById('deleteIssueId').value = btn.dataset.id;
        });
    });

    // Optional: Submit via AJAX (if you want to avoid page reload)
    document.getElementById('deleteIssueForm').addEventListener('submit', function(e) {
        e.preventDefault();
        var issueId = document.getElementById('deleteIssueId').value;
        if (!issueId) return;

        $.ajax({
            url: '@Url.Action("Delete", "Home")',
            type: 'POST',
            data: {
                id: issueId,
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
            },
            success: function() {
                // Remove deleted issue card
                $('.issue-card').filter(function() {
                    return $(this).find('.delete-btn').data('id') == issueId;
                }).remove();
                $('#deleteIssueModal').modal('hide');
            },
            error: function() {
                alert('Error deleting issue. Please try again.');
            }
        });
    });
</script>


<!-- Scripts -->
<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    // Filter issues
    document.querySelectorAll('.filter-btn').forEach(button => {
        button.addEventListener('click', function() {
            document.querySelectorAll('.filter-btn').forEach(btn => btn.classList.remove('active'));
            this.classList.add('active');
            const status = this.dataset.status;
            document.querySelectorAll('.issue-card').forEach(card => {
                card.style.display = (status === 'all' || card.dataset.status === status) ? 'block' : 'none';
            });
        });
    });

 
    // Delete modal
    $(document).ready(function() {
        $('.delete-btn').click(function() {
            $('#deleteIssueId').val($(this).data('id'));
        });

        $('#confirmDeleteBtn').click(function() {
            var issueId = $('#deleteIssueId').val();
            if (!issueId) return;

            $.ajax({
                url: '@Url.Action("Delete", "Home")',
                type: 'POST',
                data: {
                    id: issueId,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function() {
                    $('.issue-card').filter(function() {
                        return $(this).find('.delete-btn').data('id') == issueId;
                    }).remove();
                    $('#deleteIssueModal').modal('hide');
                },
                error: function() {
                    alert('Error deleting issue. Please try again.');
                }
            });
        });
    });
</script>
</body>
</html>
